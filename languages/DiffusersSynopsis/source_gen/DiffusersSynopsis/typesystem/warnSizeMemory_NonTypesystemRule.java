package DiffusersSynopsis.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.errors.messageTargets.MessageTarget;
import jetbrains.mps.errors.messageTargets.NodeMessageTarget;
import jetbrains.mps.errors.IErrorReporter;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import org.jetbrains.mps.openapi.language.SProperty;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SConcept;

public class warnSizeMemory_NonTypesystemRule extends AbstractNonTypesystemRule_Runtime implements NonTypesystemRule_Runtime {
  public warnSizeMemory_NonTypesystemRule() {
  }
  public void applyRule(final SNode synopsis, final TypeCheckingContext typeCheckingContext, IsApplicableStatus status) {
    if (SPropertyOperations.getInteger(synopsis, PROPS.height$meRg) * SPropertyOperations.getInteger(synopsis, PROPS.width$x1Oh) > 768 * 768) {
      {
        final MessageTarget errorTarget = new NodeMessageTarget();
        IErrorReporter _reporter_2309309498 = typeCheckingContext.reportWarning(synopsis, "The generation of this image could run out of memory. Consider reducing the height and width.", "r:d95cc44d-fb6d-4955-9805-f3f790b00550(DiffusersSynopsis.typesystem)", "5030534239781479865", null, errorTarget);
      }
    }
  }
  public SAbstractConcept getApplicableConcept() {
    return CONCEPTS.Synopsis$nM;
  }
  public IsApplicableStatus isApplicableAndPattern(SNode argument) {
    return new IsApplicableStatus(argument.getConcept().isSubConceptOf(getApplicableConcept()), null);
  }
  public boolean overrides() {
    return false;
  }

  private static final class PROPS {
    /*package*/ static final SProperty height$meRg = MetaAdapterFactory.getProperty(0x6d5fbab605684ec4L, 0xbb6a34c38dc971e3L, 0x45d00c3cf897b179L, 0x45d00c3cf8996f70L, "height");
    /*package*/ static final SProperty width$x1Oh = MetaAdapterFactory.getProperty(0x6d5fbab605684ec4L, 0xbb6a34c38dc971e3L, 0x45d00c3cf897b179L, 0x45d00c3cf89970b0L, "width");
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept Synopsis$nM = MetaAdapterFactory.getConcept(0x6d5fbab605684ec4L, 0xbb6a34c38dc971e3L, 0x45d00c3cf897b179L, "DiffusersSynopsis.structure.Synopsis");
  }
}
